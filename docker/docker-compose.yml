services:
  mysql:
    # imageの指定ではなく、Dockerfileを用意している。
    # 理由：ビルドの過程で必要な情報を読み取ることが可能。
    # 補足：docker-compose.ymlではビルド後にコンテナへマウントする。
    build: ./mysql
    container_name: mysql
    env_file:
      - ./mysql/db.env #MySQLの設定ファイル
    volumes:
      - mysql_data:/var/lib/mysql #実データの永読化
      - ./mysql/log:/var/log/mysql #logの永読化
      - ./mysql/sql_init:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306

  dbclient:
    image: phpmyadmin/phpmyadmin
    container_name: dbclient
    environment:
      - PMA_ARBITRARY=1 # 任意のサーバへの接続を許可
      - PMA_HOST=mysql # 接続先ホスト名 = dbサーバのコンテナ名
      - PMA_USER=root # MySQLの設定と合わせておく
      - PMA_PASSWORD=root # MySQLの設定と合わせておく
    links:
      - mysql
    ports:
      - 4200:80
    volumes:
      - ./dbclient/sessions:/sessions
    depends_on:
      - mysql # 「mysql」の後で起動

  java:
    image: openjdk:15
    container_name: java
    env_file:
      - ./mysql/db.env # mysqlと同じものを指定
    tty: true
    working_dir: /app
    volumes:
      - ../spring_prj:/app
    ports:
      - 8080:8080 # 通常実行
      - 5050:5050 # デバッグ用
    depends_on:
      - mysql # 「mysql」の後で起動

volumes:
  mysql_data:
    name: spring_boot_mysql
